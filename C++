#include <iostream>
#include <string>         //对=/==等符号进行重载使之能用于string类对象的运算等
#include <cmath>           //或者<math.h>
using namespace std



int Bala(int,int,int);     //函数声明-非必需

struct Fac   //结构体声明
{
int month;int day;int year;
};        //需不需要分号

class Time
{
public:
Time(int, int, int)    //声明构造函数-可于此处或外面定义构造函数或
void display(Date &)    //display是成员函数-形参是Dctc类对象的引用

protected:

private:
int a1;int b1;int c1;   
}

class Date
{
public
Date(int, int, int)     //同Time一样定义构造函数
friend void Time::display(Date &)   //声明Time类中的display函数为该类的友元函数
}

Time::Time(int a,int b,int c)     //定义类Time的构造函数-然后在主函数中可通过Time asd(1,2,3)来定义Time类对象asd
{
a1=a;b1=b;c1=c;
}

void Time::display(Date &d)
{
cout<<d.a2<<d.b2<<d.c2<<endl;    //输出Date中的私有数据
cout<<a1<<b1<<c1<<endl;         //输出Time中(本类)的私有数据
}

int main()
{
Time asd(1,2,3);
Date fgh(4,5,6);
Time.display(fgh)；        //分别输出Time和Date中的私有数据
}





int main()      //或者void main(void)等吗
{
int a = 0;      //还有其他如double-char-string-float等定义
int a[3][4] = {{1},{0,1},{0,0,1}}   //数组部分赋值-起始数据为a[0][0]
const int a = 0;    //表示a的值不能变-不能写成const int a;a=5(Const项不能被赋值)
char str1[] = "SHENMEJIBAWANYI";  //或者char str1[20]等
string str2 = "SHENMEJIBAWANYI";
char *str3 = "SHENMEJIBAWANYI";   //字符指针

cin>>a>>endl;             //输入输出返回
cout<<str3<<endl;
cout<<"a="<<a<<"\n";
return 0;
}

int Bala(int a,int b,int c)     //定义函数
{
c=a;a=b;b=c;
}


结构体/Struct-类/Class(设置成员访问类型/成员函数/继承)
形参/Formal(定义f)-实参/Actual(调用f)；对象(具体/占空间)-类(抽象/不占空间)-对象的类型为类
友元函数(Friend/可访问类)-友元类(关系单向且不能传递)；
Private-Public-Protected；This指针(指向本类的指针)
构造函数(对象初始化(无返回值/无类型)/与类同名)-析构函数-先构造的后析构/先析构的后构造
共用数据保护(Const)-常对象-常对象成员；继承(接收全部/调整/增加)-派生-公有继承/私有继承/保护继承
多重继承(继承多个类)；虚函数(通过基类指针访问派生类的同名f)-纯虚函数(为派生类保留f名字以定义)
重载运算符(大多数)-双目运算符(二元)/单目运算符-流插入/流提取运算符
ASCII文件(文本/每个字节放个ASCII代码)-二进制文件(按原形式放)；

输入输出(I/O)
C-scanf/prinf函数
C++-调用输入输出流库中的流对象cin/cout实现
※还可以getchar/putchar进行字符串的I/O-
putchar(66)结果为'B'
c=getchar()输入一个字母
※'A'+32='a'  //ASCII码值

控制语句
①if-for-while-do while
②continue-break-goto-switch-return

①选择排序-每次在数组(n-i+1)中寻找最值放到另一个数组第i个
②插入排序-新数和前面依次进行比较来选择插入位置
③冒泡排序
比较开销①固定n(n-1)/2②平均n(n-1)/4
交换开销①2*(n-1)②平均n(n-1)/4
※效率取决于单次比较和交换的开销比-交换费时

局部变量(f内)-全局变量(f外/始终占用存储/通用性降低)-extern扩展全局变量作用域至全部CODE(也可放在所有被调用函数前来省略extern)
静态变量-动态变量
实参-形参

C++数组转化为不定长的指针(无越界检查)-故数组间不可复制
※数组复制消耗内存过大

C++数组下标以0开始/MATLAB以1开始
p[n]等价于*(p+n)；C/C++中数组和指针类似-下标表示该元素相对首元素的偏移
若从1开始p[n]等价于*(p+n-1)

"\0"代表ASCII码为0的字符-空操作符(啥都不干)
程序通过检测"\0"位置来判断字符串是否结束

结构体变量.成员名 = *(p).成员名 = p->成员名(->指向运算符)
stu.num = *(p).num = p->num

int *p  = new int[10];      //建立动态数组-把指针当做数组名用
delete []p;
※不要用delete删不是new分配的内存-不要删2次-delete删空指针安全
※若用new []为数组分配内存-则delete []
※若用new为实体分配内存-则delete 


定义性声明=定义(建立存储空间的声明)
引用性声明=声明(不需建立存储的声明)
int a 为定义/声明(可多次)
extern int a 为声明(仅一次)

static作声明
①作用于局部变量-f完不释放
②作用于全局变量-作用域仅限本文件(静态外部变量)

C++参数传递
①值传递(实参内容复制到形参中)-形参为类则需调用构造函数(效率低)-实参/形参放在不同存储中
②指针传递(地址传递)
void swap(int *a, int *b)
int main(){swap(&a, &b)}
③传递引用(修改形参会直接修改实参)

&左值引用-逻辑与/非简洁与
&&右值引用-条件与/简洁与




Java-爪哇岛-咖啡标志
流(数据传输)-缓冲区(提高效率/32位/64位)
字节流-字符流(Unicode)
e进制-信息表达最优解-2/3最接近

编写(.java)-编译(.class/二进制)-运行
编译器-JDK开发包的bin文件的javac.exe

package Javawork.wenjianming  //最多1句-把编译生成的所有class文件放入该包中
import -.*;   //使用包(可多个)
public class wenjianming{……}   //公共类-名称与文件名相同
class A{};  //定义类(可多个)
Interface B   //定义接口(可多个)

-3%-10结果-1  //取余
Window/Dialog/Frame对象默认布局管理器BorderLayout(上下左右中)-其他FlowLayout/GridLayout/CardLayout
※public BorderLayout(int h, int v)  //h(左右)-v(上下)
p.add(b,"south")  //在容器组件p下面加按钮b-north/south/east/west/center
Button b = new button()  //声明并创建按钮对象b-其他int之类的类似-用类(模板)创建对象(实例)并分配内存
非访问控制符-static/abstract/final(定义符号常量)
引用数据类型-类/接口/数组
string非基本数据类型-为对象
Java布尔型true/false不对应1/0

private JLabel[] lab;  //创建类为JLabel[]的名为lab的吗
lab = new JLabel[]{new JLabel("为什么"),new JLabel("怎么样")};   //引用即为lab[0],lab[1]等
pan1.add(lab[1])    //向面板添加组件

面向对象特征-封装/继承/多态-包-访问修饰符/非访问修饰符-接口
this(本类)/super(调用父类)代表对象-静态方法中不能用该关键字
static后不需要创建对象-直接类名引用-如random等
单(多)继承-单个类只有单(多)个父亲
Java类中只允许单继承-允许多重继承(A/B-B/C)-接口可多继承
父类-多个类向上抽取共性
















