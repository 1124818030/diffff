int f1(int n) {        //递归-时间复杂度看成二叉树求节点个数吗
	if (n == 1 || n == 2){
		return 1;
	}
	else{
		return f1(n-1) + f1(n-2);
  }
}


int f2(int n) {         //循环
	int *A = new int ;
	A[0] = 1; 
  A[1] = 1;
  A[2] = 0;
  
	for(int i = 2; i < n; i++){
		A[i] = A[i-1] + A[i-2];
	}
	return A[n-1];
}


int f22(int n) {          //循环2
    int f0 = 1;  
    int f1 = 1;  
    int f2 = 0;  
    
    for(int i = 2; i < n; i++){  
        f2 = f0 + f1;  
        f0 = f1;  
        f1 = f2;  
    }  
    return f2;  
} 
